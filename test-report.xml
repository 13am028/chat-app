<?xml version="1.0" encoding="UTF-8"?>
<testExecutions version="1">
  <file path="/Users/13am/Desktop/software_eng/chat-app/src/components/modal/__tests__/BlockFriendModal.test.tsx">
    <testCase name="BlockFriendModal renders without errors" duration="55"/>
    <testCase name="BlockFriendModal displays the modal when &quot;Remove&quot; button is clicked" duration="51"/>
    <testCase name="BlockFriendModal displays a success alert when blocking a friend is successful" duration="28"/>
  </file>
  <file path="/Users/13am/Desktop/software_eng/chat-app/src/components/modal/__tests__/RemoveFriendModal.test.tsx">
    <testCase name="RemoveFriendModal renders the modal with the correct title and message" duration="126"/>
    <testCase name="RemoveFriendModal calls the removeFriend function when the remove button is clicked" duration="59"/>
    <testCase name="RemoveFriendModal closes the modal when the close button is clicked" duration="33"/>
  </file>
  <file path="/Users/13am/Desktop/software_eng/chat-app/src/components/icons/__tests__/GroupIcon.test.tsx">
    <testCase name="GroupIcon should show the invite friends option when right-clicked" duration="39"/>
    <testCase name="GroupIcon should close the menu when clicking outside" duration="12"/>
    <testCase name="GroupIcon should show the invite friends modal when clicking the invite friends option" duration="82"/>
    <testCase name="GroupIcon should show a search input in the invite friends modal" duration="24"/>
    <testCase name="GroupIcon should show a list of friends in the invite friends modal" duration="13"/>
    <testCase name="GroupIcon should show an invite button for each friend in the invite friends modal" duration="13"/>
    <testCase name="GroupIcon should close the invite friends modal when clicking the close button" duration="60"/>
  </file>
  <file path="/Users/13am/Desktop/software_eng/chat-app/src/components/dm/__tests__/Conversation.test.tsx">
    <testCase name="Conversation should render" duration="42"/>
  </file>
  <file path="/Users/13am/Desktop/software_eng/chat-app/src/components/message/__tests__/MessageTextField.test.tsx">
    <testCase name="MessageTextField should render" duration="62"/>
  </file>
  <file path="/Users/13am/Desktop/software_eng/chat-app/src/pages/home/__tests__/Home.test.tsx">
    <testCase name="Home renders navigation components" duration="52"/>
  </file>
  <file path="/Users/13am/Desktop/software_eng/chat-app/src/components/nav/__tests__/Nav.test.tsx">
    <testCase name="Nav renders the component" duration="56"/>
  </file>
  <file path="/Users/13am/Desktop/software_eng/chat-app/src/pages/dm/__tests__/DMPage.test.tsx">
    <testCase name="DMPage renders the page with the correct elements" duration="173"/>
  </file>
  <file path="/Users/13am/Desktop/software_eng/chat-app/src/components/nav/__tests__/FriendStatusNav.test.tsx">
    <testCase name="FriendStatusNav component should render the component" duration="45"/>
  </file>
  <file path="/Users/13am/Desktop/software_eng/chat-app/src/components/modal/__tests__/AddFriendModal.test.tsx">
    <testCase name="AddFriendModal displays the username entered by the user" duration="55"/>
    <testCase name="AddFriendModal calls handleAddFriend function when Add button is clicked" duration="20"/>
    <testCase name="AddFriendModal handles add friend success scenario correctly" duration="32"/>
    <testCase name="AddFriendModal handles add friend not found scenario correctly" duration="19"/>
    <testCase name="AddFriendModal handles already friends scenario correctly" duration="15"/>
  </file>
  <file path="/Users/13am/Desktop/software_eng/chat-app/src/App.test.tsx">
    <testCase name="renders learn react link" duration="20"/>
  </file>
  <file path="/Users/13am/Desktop/software_eng/chat-app/src/pages/auth/__tests__/Login.test.tsx">
    <testCase name="Login renders login form" duration="42"/>
  </file>
  <file path="/Users/13am/Desktop/software_eng/chat-app/src/components/setting/__tests__/SpanRevealButton.test.tsx">
    <testCase name="SpanRevealButton renders masked data by default" duration="26"/>
    <testCase name="SpanRevealButton reveals data on click" duration="12"/>
    <testCase name="SpanRevealButton hides data on second click" duration="6"/>
    <testCase name="SpanRevealButton reveals data on mouseover" duration="3"/>
    <testCase name="SpanRevealButton hides data on mouseout" duration="7"/>
  </file>
  <file path="/Users/13am/Desktop/software_eng/chat-app/src/components/addServer/__tests__/AddServerIcon.test.tsx">
    <testCase name="AddServerIcon should render the component correctly" duration="27"/>
    <testCase name="AddServerIcon should open the modal on button click" duration="62"/>
    <testCase name="AddServerIcon should close the modal on close button click" duration="38"/>
    <testCase name="AddServerIcon should call onGroupCreate prop and close the modal on successful group creation" duration="46"/>
  </file>
  <file path="/Users/13am/Desktop/software_eng/chat-app/src/components/setting/__tests__/ProfileSetting.test.tsx">
    <testCase name="ProfileSetting component renders my profile section" duration="37"/>
    <testCase name="ProfileSetting component renders change password button" duration="14"/>
    <testCase name="ProfileSetting component renders enable two-factor auth button" duration="4"/>
    <testCase name="ProfileSetting component opens and closes change avatar modal" duration="43"/>
  </file>
  <file path="/Users/13am/Desktop/software_eng/chat-app/src/components/login/__tests__/LoginBox.test.tsx">
    <testCase name="LoginBox renders login form" duration="26"/>
    <testCase name="LoginBox can fill email input" duration="13"/>
    <testCase name="LoginBox can fill password input" duration="5"/>
    <testCase name="LoginBox can toggle password visibility" duration="8"/>
    <testCase name="LoginBox can submit login form" duration="5"/>
  </file>
  <file path="/Users/13am/Desktop/software_eng/chat-app/src/pages/auth/__tests__/SignUp.test.tsx">
    <testCase name="SignUp should render the SignUpBox component" duration="62"/>
    <testCase name="SignUp should add the &quot;dark&quot; class to the background div when theme is &quot;dark&quot;" duration="26"/>
    <testCase name="SignUp should not add the &quot;dark&quot; class to the background div when theme is &quot;light&quot;" duration="33"/>
  </file>
  <file path="/Users/13am/Desktop/software_eng/chat-app/src/components/signup/__tests__/SignUpBox.test.tsx">
    <testCase name="SignUpBox component should render all the input fields" duration="100"/>
  </file>
  <file path="/Users/13am/Desktop/software_eng/chat-app/src/components/icons/__tests__/AccountDropdownMenu.test.tsx">
    <testCase name="AccountDropdownMenu should render the user avatar image" duration="34"/>
    <testCase name="AccountDropdownMenu should render the account dropdown menu" duration="142"/>
  </file>
  <file path="/Users/13am/Desktop/software_eng/chat-app/src/components/login/__tests__/SignInWithGoogleButton.test.tsx">
    <testCase name="SignInWithGoogleButton renders correctly" duration="57"/>
    <testCase name="SignInWithGoogleButton renders with the dark theme" duration="2"/>
    <testCase name="SignInWithGoogleButton calls signInWithGoogle function on click" duration="9"/>
  </file>
  <file path="/Users/13am/Desktop/software_eng/chat-app/src/components/upload/__tests__/UploadWidget.test.tsx">
    <testCase name="UploadWidget component renders without errors" duration="23"/>
  </file>
  <file path="/Users/13am/Desktop/software_eng/chat-app/src/components/login/__tests__/SIgnUpBox.test.tsx">
    <testCase name="SignUpBox renders the signup text" duration="17"/>
    <testCase name="SignUpBox renders the signup link" duration="26"/>
    <testCase name="SignUpBox renders the dark theme" duration="2"/>
  </file>
  <file path="/Users/13am/Desktop/software_eng/chat-app/src/components/nav/__tests__/DirectMessageNav.test.tsx">
    <testCase name="DirectMessageNav renders the direct message nav" duration="39"/>
  </file>
  <file path="/Users/13am/Desktop/software_eng/chat-app/src/components/context/__tests__/AuthContext.test.tsx">
    <testCase name="AuthContextProvider renders children" duration="40"/>
  </file>
  <file path="/Users/13am/Desktop/software_eng/chat-app/src/components/icons/__tests__/FriendStatus.test.tsx">
    <testCase name="FriendStatus renders the component with user data" duration="63"/>
    <testCase name="FriendStatus handleOnSelect function is called when the component is clicked" duration="7"/>
  </file>
  <file path="/Users/13am/Desktop/software_eng/chat-app/src/components/addServer/__tests__/CustomSVG.test.tsx">
    <testCase name="CustomSVG should render the custom SVG component" duration="19"/>
  </file>
  <file path="/Users/13am/Desktop/software_eng/chat-app/src/components/message/__tests__/Message.test.tsx">
    <testCase name="Message component renders messages" duration="53"/>
    <testCase name="Message component should scroll to the bottom when new messages are added" duration="3"/>
  </file>
  <file path="/Users/13am/Desktop/software_eng/chat-app/src/components/context/__tests__/ChatContext.test.tsx">
    <testCase name="ChatContextProvider provides the dm data" duration="26"/>
  </file>
  <file path="/Users/13am/Desktop/software_eng/chat-app/src/components/icons/__tests__/FriendIcon.test.tsx">
    <testCase name="FriendIcon component renders a friend icon with the correct class name" duration="14"/>
  </file>
  <file path="/Users/13am/Desktop/software_eng/chat-app/src/functions/__tests__/register.test.tsx">
    <testCase name="signup registers user with valid input" duration="2"/>
    <testCase name="signup displays an error message when input is invalid" duration="1"/>
    <testCase name="signup displays an error message when registration fails" duration="0"/>
  </file>
  <file path="/Users/13am/Desktop/software_eng/chat-app/src/functions/__tests__/addFriendValidate.test.tsx">
    <testCase name="addFriendValidate should call addFriend with the given username" duration="1"/>
    <testCase name="addFriendValidate should alert the user when the username is empty" duration="1"/>
    <testCase name="addFriendValidate should alert the user when the username is not found" duration="0"/>
    <testCase name="addFriendValidate should alert the user when the username is already friends" duration="0"/>
    <testCase name="addFriendValidate should alert the user when the username is successfully added as a friend" duration="0"/>
  </file>
</testExecutions>