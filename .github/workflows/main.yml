name: React App CI
# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
# A workflow run is made up of one or more jobs that can run sequentially or in parallel

env:
  REACT_APP_API_KEY: ${{secrets.REACT_APP_API_KEY}}
  REACT_APP_AUTH_DOMAIN: ${{secrets.REACT_APP_AUTH_DOMAIN}}
  REACT_APP_PROJECT_ID: ${{secrets.REACT_APP_PROJECT_ID}}
  REACT_APP_STORAGE_BUCKET: ${{secrets.REACT_APP_STORAGE_BUCKET}}
  REACT_APP_MESSAGING_SENDER_ID: ${{secrets.REACT_APP_MESSAGING_SENDER_ID}}
  REACT_APP_APP_ID: ${{secrets.REACT_APP_APP_ID}}
  REACT_APP_MEASUREMENT_ID: ${{secrets.REACT_APP_MEASUREMENT_ID}}
  TEST_EMAIL: ${{secrets.TEST_EMAIL}}
  TEST_PASSWORD: ${{secrets.TEST_PASSWORD}}
  TEST_USERNAME: ${{secrets.TEST_USERNAME}}
  TEST_DISPLAY_NAME: ${{secrets.TEST_DISPLAY_NAME}}

jobs:
  react-app-workflow:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js 16.x
        uses: actions/setup-node@v3
        with:
          node-version: 16.x
      - name: npm ci
        run: npm ci
      - name: test
        run: npm test
      - name: format
        run: npm run prettier
      - name: lint
        run: npm run lint
      - name: typescript
        run: npm run typescript
      - name: build
        run: npm run build
      - name: Archive Build
        uses: actions/upload-artifact@v3
        with:
          name: build
          path: build
      - name: Upload test results
        uses: actions/upload-artifact@v3
        with:
          name: coverage-report
          path: coverage/lcov.info

  sonarqube:
    needs: react-app-workflow
    runs-on: ubuntu-20.04

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Download coverage report artifact
        uses: actions/download-artifact@v3
        with:
          name: coverage-report
      - name: SonarQube Scan
        uses: sonarsource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN}}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}


  e2e:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 16
      - name: Install Playwright
        run: npm ci --only=prod --ignore-scripts playwright
      - name: Install Playwright Browsers
        run: npx playwright install --with-deps
      - name: Run Playwright tests
        run: npx playwright test
      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30


  deploy:
    runs-on: ubuntu-latest
    needs: [sonarqube, e2e]
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v3
      - name: Download Build
        uses: actions/download-artifact@v3
        with:
          name: build
          path: build
      - name: Deploy to Firebase
        uses: w9jds/firebase-action@master
        with:
          args: deploy --only hosting
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
          FIREBASE_API_KEY: ${{secrets.REACT_APP_API_KEY}}
          FIREBASE_AUTH_DOMAIN: ${{secrets.REACT_APP_AUTH_DOMAIN}}
          FIREBASE_PROJECT_ID: ${{secrets.REACT_APP_PROJECT_ID}}
          FIREBASE_STORAGE_BUCKET: ${{secrets.REACT_APP_STORAGE_BUCKET}}
          FIREBASE_MESSAGING_SENDER_ID: ${{secrets.REACT_APP_MESSAGING_SENDER_ID}}
          FIREBASE_APP_ID: ${{secrets.REACT_APP_APP_ID}}
          FIREBASE_MEASUREMENT_ID: ${{secrets.REACT_APP_MEASUREMENT_ID}}
